<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-09T18:21:25 IST" name="Suite" finished-at="2023-08-09T18:24:18 IST" duration-ms="173848">
    <groups>
    </groups>
    <test started-at="2023-08-09T18:21:25 IST" name="RUN ON ChromeTest" finished-at="2023-08-09T18:22:17 IST" duration-ms="52282">
      <class name="lambdaTest.TestScenario2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario2@3c77d488]" started-at="2023-08-09T18:21:25 IST" name="setUp" finished-at="2023-08-09T18:21:31 IST" duration-ms="6843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragDropBySlider()[pri:0, instance:lambdaTest.TestScenario2@3c77d488]" started-at="2023-08-09T18:21:31 IST" name="dragDropBySlider" finished-at="2023-08-09T18:21:39 IST" duration-ms="7903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDropBySlider -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario2@3c77d488]" started-at="2023-08-09T18:21:39 IST" name="tearDown" finished-at="2023-08-09T18:21:40 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario2 -->
      <class name="lambdaTest.TestScenario1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario1@72e5a8e]" started-at="2023-08-09T18:21:25 IST" name="setUp" finished-at="2023-08-09T18:22:11 IST" duration-ms="46073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="formDemo()[pri:0, instance:lambdaTest.TestScenario1@72e5a8e]" started-at="2023-08-09T18:22:11 IST" name="formDemo" finished-at="2023-08-09T18:22:17 IST" duration-ms="5947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formDemo -->
        <test-method is-config="true" signature="tearDown1()[pri:0, instance:lambdaTest.TestScenario1@72e5a8e]" started-at="2023-08-09T18:22:17 IST" name="tearDown1" finished-at="2023-08-09T18:22:17 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown1 -->
      </class> <!-- lambdaTest.TestScenario1 -->
      <class name="lambdaTest.TestScenario3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario3@63376bed]" started-at="2023-08-09T18:21:25 IST" name="setUp" finished-at="2023-08-09T18:21:47 IST" duration-ms="22729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inputFormSubmit()[pri:0, instance:lambdaTest.TestScenario3@63376bed]" started-at="2023-08-09T18:21:47 IST" name="inputFormSubmit" finished-at="2023-08-09T18:22:03 IST" duration-ms="15394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputFormSubmit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario3@63376bed]" started-at="2023-08-09T18:22:03 IST" name="tearDown" finished-at="2023-08-09T18:22:03 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario3 -->
    </test> <!-- RUN ON ChromeTest -->
    <test started-at="2023-08-09T18:22:17 IST" name="RUN ON EdgeTest" finished-at="2023-08-09T18:22:59 IST" duration-ms="42092">
      <class name="lambdaTest.TestScenario2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario2@53045c6c]" started-at="2023-08-09T18:22:17 IST" name="setUp" finished-at="2023-08-09T18:22:54 IST" duration-ms="36463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragDropBySlider()[pri:0, instance:lambdaTest.TestScenario2@53045c6c]" started-at="2023-08-09T18:22:54 IST" name="dragDropBySlider" finished-at="2023-08-09T18:22:59 IST" duration-ms="5235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDropBySlider -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario2@53045c6c]" started-at="2023-08-09T18:22:59 IST" name="tearDown" finished-at="2023-08-09T18:22:59 IST" duration-ms="388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario2 -->
      <class name="lambdaTest.TestScenario1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario1@795509d9]" started-at="2023-08-09T18:22:17 IST" name="setUp" finished-at="2023-08-09T18:22:36 IST" duration-ms="19378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="formDemo()[pri:0, instance:lambdaTest.TestScenario1@795509d9]" started-at="2023-08-09T18:22:36 IST" name="formDemo" finished-at="2023-08-09T18:22:43 IST" duration-ms="6853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formDemo -->
        <test-method is-config="true" signature="tearDown1()[pri:0, instance:lambdaTest.TestScenario1@795509d9]" started-at="2023-08-09T18:22:43 IST" name="tearDown1" finished-at="2023-08-09T18:22:44 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown1 -->
      </class> <!-- lambdaTest.TestScenario1 -->
      <class name="lambdaTest.TestScenario3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario3@5149d738]" started-at="2023-08-09T18:22:17 IST" name="setUp" finished-at="2023-08-09T18:22:25 IST" duration-ms="7816" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inputFormSubmit()[pri:0, instance:lambdaTest.TestScenario3@5149d738]" started-at="2023-08-09T18:22:25 IST" name="inputFormSubmit" finished-at="2023-08-09T18:22:45 IST" duration-ms="20260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputFormSubmit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario3@5149d738]" started-at="2023-08-09T18:22:45 IST" name="tearDown" finished-at="2023-08-09T18:22:45 IST" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario3 -->
    </test> <!-- RUN ON EdgeTest -->
    <test started-at="2023-08-09T18:22:59 IST" name="RUN ON firefoxtest" finished-at="2023-08-09T18:23:30 IST" duration-ms="31114">
      <class name="lambdaTest.TestScenario2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario2@548d708a]" started-at="2023-08-09T18:22:59 IST" name="setUp" finished-at="2023-08-09T18:23:04 IST" duration-ms="5316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragDropBySlider()[pri:0, instance:lambdaTest.TestScenario2@548d708a]" started-at="2023-08-09T18:23:04 IST" name="dragDropBySlider" finished-at="2023-08-09T18:23:11 IST" duration-ms="6131" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [95] but found [94]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [95] but found [94]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lambdaTest.TestScenario2.dragDropBySlider(TestScenario2.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDropBySlider -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario2@548d708a]" started-at="2023-08-09T18:23:11 IST" name="tearDown" finished-at="2023-08-09T18:23:11 IST" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario2 -->
      <class name="lambdaTest.TestScenario1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario1@4be29ed9]" started-at="2023-08-09T18:22:59 IST" name="setUp" finished-at="2023-08-09T18:23:24 IST" duration-ms="25242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="formDemo()[pri:0, instance:lambdaTest.TestScenario1@4be29ed9]" started-at="2023-08-09T18:23:24 IST" name="formDemo" finished-at="2023-08-09T18:23:30 IST" duration-ms="5213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formDemo -->
        <test-method is-config="true" signature="tearDown1()[pri:0, instance:lambdaTest.TestScenario1@4be29ed9]" started-at="2023-08-09T18:23:30 IST" name="tearDown1" finished-at="2023-08-09T18:23:30 IST" duration-ms="654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown1 -->
      </class> <!-- lambdaTest.TestScenario1 -->
      <class name="lambdaTest.TestScenario3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario3@4b013c76]" started-at="2023-08-09T18:22:59 IST" name="setUp" finished-at="2023-08-09T18:23:14 IST" duration-ms="14845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inputFormSubmit()[pri:0, instance:lambdaTest.TestScenario3@4b013c76]" started-at="2023-08-09T18:23:14 IST" name="inputFormSubmit" finished-at="2023-08-09T18:23:27 IST" duration-ms="13146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputFormSubmit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario3@4b013c76]" started-at="2023-08-09T18:23:27 IST" name="tearDown" finished-at="2023-08-09T18:23:28 IST" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario3 -->
    </test> <!-- RUN ON firefoxtest -->
    <test started-at="2023-08-09T18:23:30 IST" name="RUN ON InternetExplorer" finished-at="2023-08-09T18:24:18 IST" duration-ms="48138">
      <class name="lambdaTest.TestScenario2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario2@742ff096]" started-at="2023-08-09T18:23:30 IST" name="setUp" finished-at="2023-08-09T18:23:55 IST" duration-ms="24757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragDropBySlider()[pri:0, instance:lambdaTest.TestScenario2@742ff096]" started-at="2023-08-09T18:23:55 IST" name="dragDropBySlider" finished-at="2023-08-09T18:24:03 IST" duration-ms="7497" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [95] but found [51]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [95] but found [51]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lambdaTest.TestScenario2.dragDropBySlider(TestScenario2.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragDropBySlider -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario2@742ff096]" started-at="2023-08-09T18:24:03 IST" name="tearDown" finished-at="2023-08-09T18:24:03 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario2 -->
      <class name="lambdaTest.TestScenario1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario1@7bba5817]" started-at="2023-08-09T18:23:30 IST" name="setUp" finished-at="2023-08-09T18:23:38 IST" duration-ms="7662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="formDemo()[pri:0, instance:lambdaTest.TestScenario1@7bba5817]" started-at="2023-08-09T18:23:38 IST" name="formDemo" finished-at="2023-08-09T18:23:45 IST" duration-ms="6848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formDemo -->
        <test-method is-config="true" signature="tearDown1()[pri:0, instance:lambdaTest.TestScenario1@7bba5817]" started-at="2023-08-09T18:23:45 IST" name="tearDown1" finished-at="2023-08-09T18:23:45 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown1 -->
      </class> <!-- lambdaTest.TestScenario1 -->
      <class name="lambdaTest.TestScenario3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdaTest.TestScenario3@75437611]" started-at="2023-08-09T18:23:30 IST" name="setUp" finished-at="2023-08-09T18:23:53 IST" duration-ms="22224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inputFormSubmit()[pri:0, instance:lambdaTest.TestScenario3@75437611]" started-at="2023-08-09T18:23:53 IST" name="inputFormSubmit" finished-at="2023-08-09T18:24:18 IST" duration-ms="25647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputFormSubmit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdaTest.TestScenario3@75437611]" started-at="2023-08-09T18:24:18 IST" name="tearDown" finished-at="2023-08-09T18:24:18 IST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdaTest.TestScenario3 -->
    </test> <!-- RUN ON InternetExplorer -->
  </suite> <!-- Suite -->
</testng-results>
